-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is "dbo." for database owner and "" for object qualifier 

-- Create tables

IF (SELECT COLUMNPROPERTY( OBJECT_ID('{databaseOwner}{objectQualifier}Documents'),'ForceDownload','AllowsNull')) IS NULL 
	ALTER TABLE {databaseOwner}{objectQualifier}Documents_Documents 
		ADD ForceDownload BIT 
GO

UPDATE {databaseOwner}{objectQualifier}Documents_Documents 
SET ForceDownload = 0
GO

-- Drop stored procedures

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}GetDocument') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Documents_GetDocument
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}GetDocuments') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Documents_GetDocuments
GO

-- Create stored procedures

CREATE PROCEDURE {databaseOwner}{objectQualifier}Documents_GetDocument
	@ItemId   INT,
	@ModuleId INT
AS
SELECT D.Itemid,
       D.Moduleid,
       D.Title,
       D.Url,
       D.Category,
       CreatedByUser.FirstName + ' ' + CreatedByUser.LastName AS "CreatedByUser",
       OwnedByUser.FirstName + ' ' + OwnedByUser.LastName AS "OwnedByUser",
       ModifiedByUser.FirstName + ' ' + ModifiedByUser.LastName AS "ModifiedByUser",       
       F.Size,
       F.ContentType,
       UT.TrackClicks,
       UT.Clicks,
       UT.NewWindow,
       D.OwnedByUserID, 
       D.ModifiedByUserID, 
       D.ModifiedDate,
       D.CreatedByUserID, 
       D.CreatedDate, 
       D.SortOrderIndex,
       D.Description,
	   D.ForceDownload
FROM {databaseOwner}{objectQualifier}Documents_Documents AS D
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS CreatedByUser on D.CreatedByUserID = CreatedByUser.UserId 
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS OwnedByUser on D.OwnedByUserID = OwnedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS ModifiedByUser on D.ModifiedByUserID = ModifiedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}UrlTracking AS UT on D.URL = UT.Url and UT.ModuleId = @ModuleID
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Files AS F on D.URL = 'fileid=' + convert(varchar,F.FileID)
WHERE D.ItemId = @ItemId and D.ModuleId = @ModuleId

GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Documents_GetDocuments
	@ModuleId INT,
	@PortalId INT
AS
SELECT D.ItemId,
       D.Moduleid,
       D.Title,
       D.Url,
       CreatedByUser.FirstName + ' ' + CreatedByUser.LastName AS "CreatedByUser",
       OwnedByUser.FirstName + ' ' + OwnedByUser.LastName AS "OwnedByUser",
       ModifiedByUser.FirstName + ' ' + ModifiedByUser.LastName AS "ModifiedByUser",       
       D.Category,
       F.Size,
       UT.TrackClicks,
       UT.Clicks,
       UT.NewWindow,
       D.OwnedByUserID, 
       D.ModifiedByUserID, 
       D.ModifiedDate,
       D.CreatedByUserID, 
       D.CreatedDate, 
       D.SortOrderIndex,
       D.Description,
	   D.ForceDownload
FROM {databaseOwner}{objectQualifier}Documents_Documents AS D
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS CreatedByUser on D.CreatedByUserID = CreatedByUser.UserId 
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS OwnedByUser on D.OwnedByUserID = OwnedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS ModifiedByUser on D.ModifiedByUserID = ModifiedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Files AS F on D.URL = 'fileid=' + convert(varchar, F.FileID)
LEFT OUTER JOIN {databaseOwner}{objectQualifier}UrlTracking AS UT on D.URL = UT.Url and UT.ModuleId = @ModuleID
WHERE  D.ModuleId = @ModuleId
ORDER by D.Title
GO
