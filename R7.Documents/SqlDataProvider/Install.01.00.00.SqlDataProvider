-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is "dbo." for database owner and "" for object qualifier 

-- Create tables

IF NOT EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}Documents]') and OBJECTPROPERTY(id, N'IsTable') = 1)
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}Documents]
		(
			[ItemID] [int] NOT NULL IDENTITY(0, 1),
			[ModuleID] [int] NOT NULL,
			[CreatedDate] [datetime] NULL,
			[URL] [nvarchar] (250) NULL,
			[Title] [nvarchar] (150) NULL,
			[Category] [nvarchar] (50) NULL,
			[CreatedByUserID] INT NULL, 
			[OwnedByUserID] INT NULL, 
			[ModifiedByUserID] INT NULL, 
			[ModifiedDate] datetime NULL, 
			[SortOrderIndex] INT NULL, 
			[Description] nvarchar (255) NULL,
			ForceDownload BIT
		)

		ALTER TABLE {databaseOwner}[{objectQualifier}Documents] ADD CONSTRAINT [PK_{objectQualifier}Documents] PRIMARY KEY NONCLUSTERED  ([ItemID])
		CREATE CLUSTERED INDEX [IX_{objectQualifier}Documents] ON {databaseOwner}[{objectQualifier}Documents] ([ModuleID])

		ALTER TABLE {databaseOwner}[{objectQualifier}Documents] WITH NOCHECK ADD
		CONSTRAINT [FK_{objectQualifier}Documents_{objectQualifier}Modules] FOREIGN KEY ([ModuleID]) REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) ON DELETE CASCADE
	END
GO

-- Drop stored procedures 

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}GetDocument') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GetDocument
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}GetDocuments') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GetDocuments
GO

-- Create stored procedures

CREATE PROCEDURE {databaseOwner}{objectQualifier}GetDocument
	@ItemId   INT,
	@ModuleId INT
AS
SELECT {objectQualifier}Documents.Itemid,
       {objectQualifier}Documents.Moduleid,
       {objectQualifier}Documents.Title,
       {objectQualifier}Documents.Url,
       {objectQualifier}Documents.Category,
       CreatedByUser.FirstName + ' ' + CreatedByUser.LastName AS "CreatedByUser",
       OwnedByUser.FirstName + ' ' + OwnedByUser.LastName AS "OwnedByUser",
       ModifiedByUser.FirstName + ' ' + ModifiedByUser.LastName AS "ModifiedByUser",       
       {objectQualifier}Files.Size,
       {objectQualifier}Files.ContentType,
       {objectQualifier}UrlTracking.TrackClicks,
       {objectQualifier}UrlTracking.Clicks,
       {objectQualifier}UrlTracking.NewWindow,
       {objectQualifier}Documents.OwnedByUserID, 
       {objectQualifier}Documents.ModifiedByUserID, 
       {objectQualifier}Documents.ModifiedDate,
       {objectQualifier}Documents.CreatedByUserID, 
       {objectQualifier}Documents.CreatedDate, 
       {objectQualifier}Documents.SortOrderIndex,
       {objectQualifier}Documents.Description,
	   {objectQualifier}Documents.ForceDownload
FROM {databaseOwner}{objectQualifier}Documents
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS CreatedByUser on {objectQualifier}Documents.CreatedByUserID = CreatedByUser.UserId 
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS OwnedByUser on {objectQualifier}Documents.OwnedByUserID = OwnedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users  AS ModifiedByUser on {objectQualifier}Documents.ModifiedByUserID = ModifiedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}UrlTracking on {objectQualifier}Documents.URL = {objectQualifier}UrlTracking.Url and {objectQualifier}UrlTracking.ModuleId = @ModuleID
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Files on {objectQualifier}Documents.URL = 'fileid=' +
convert(varchar,{databaseOwner}{objectQualifier}Files.FileID)
WHERE  {databaseOwner}{objectQualifier}Documents.ItemId = @ItemId
and    {databaseOwner}{objectQualifier}Documents.ModuleId = @ModuleId

GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GetDocuments
	@ModuleId INT,
	@PortalId INT
AS
SELECT {objectQualifier}Documents.ItemId,
        {objectQualifier}Documents.Moduleid,
       {objectQualifier}Documents.Title,
       {objectQualifier}Documents.Url,
       CreatedByUser.FirstName + ' ' + CreatedByUser.LastName AS "CreatedByUser",
       OwnedByUser.FirstName + ' ' + OwnedByUser.LastName AS "OwnedByUser",
       ModifiedByUser.FirstName + ' ' + ModifiedByUser.LastName AS "ModifiedByUser",       
       {objectQualifier}Documents.Category,
       {objectQualifier}Files.Size,
       {objectQualifier}UrlTracking.TrackClicks,
       {objectQualifier}UrlTracking.Clicks,
       {objectQualifier}UrlTracking.NewWindow,
       {objectQualifier}Documents.OwnedByUserID, 
       {objectQualifier}Documents.ModifiedByUserID, 
       {objectQualifier}Documents.ModifiedDate,
       {objectQualifier}Documents.CreatedByUserID, 
       {objectQualifier}Documents.CreatedDate, 
       {objectQualifier}Documents.SortOrderIndex,
       {objectQualifier}Documents.Description,
	   {objectQualifier}Documents.ForceDownload
FROM {databaseOwner}{objectQualifier}Documents
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS CreatedByUser on {databaseOwner}{objectQualifier}Documents.CreatedByUserID = CreatedByUser.UserId 
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS OwnedByUser on {databaseOwner}{objectQualifier}Documents.OwnedByUserID = OwnedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users  AS ModifiedByUser on {databaseOwner}{objectQualifier}Documents.ModifiedByUserID = ModifiedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Files on {databaseOwner}{objectQualifier}Documents.URL = 'fileid=' + convert(varchar,{databaseOwner}{objectQualifier}Files.FileID)
LEFT OUTER JOIN {databaseOwner}{objectQualifier}UrlTracking on {databaseOwner}{objectQualifier}Documents.URL = {databaseOwner}{objectQualifier}UrlTracking.Url and {databaseOwner}{objectQualifier}UrlTracking.ModuleId = @ModuleID
WHERE  {objectQualifier}Documents.ModuleId = @ModuleId
ORDER by {objectQualifier}Documents.Title
GO
